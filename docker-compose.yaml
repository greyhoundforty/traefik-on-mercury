---
version: "3.6"
services:
  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - DO_AUTH_TOKEN=${DO_AUTH_TOKEN}
    command:
      # Try to enable this if something isn't working.
      # Chances are, Traefik will tell you why.
      # Be careful in production as it exposes the traffic you might not want to expose.
      --log.level=DEBUG
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/config:/etc/traefik
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/portainer/data:/data
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
  watchtower:
    container_name: watchtower
    hostname: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
  influxdb:
    hostname: influxdb
    container_name: influxdb
    restart: always
    domainname: ${DOMAINNAME}
    image: influxdb:latest
    volumes:
      - ./docker/influx/data:/var/lib/influxdb
      - ./docker/influx/config/:/etc/influxdb
    environment:
      INFLUXDB_REPORTING_DISABLED: "true"
      INFLUXDB_ADMIN_ENABLED: "true"
      INFLUXDB_DB: "mydb"
    networks:
      - traefik_proxy
    ports:
      - "8086:8086"
      - "8082:8082"
      - "8089:8089"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=influxdb"
      - "traefik.frontend.rule=Host:influx.${DOMAINNAME}"
      - "traefik.port=8086"
      - "traefik.docker.network=traefik_proxy"

#  kapacitor:
#    hostname: kapacitor
#    container_name: kapacitor
#    restart: always
#    domainname: ${DOMAINNAME}
#    image: kapacitor:latest
#    environment:
#      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
#    ports:
#      - "9092:9092"
#    networks:
#      - traefik_proxy
#
#  chronograf:
#    hostname: chronograf
#    container_name: chronograf
#    restart: always
#    domainname: ${DOMAINNAME}
#    image: chronograf:latest
#    volumes:
#      - ./docker/chronograf/data:/var/lib/chronograf
#    ports:
#      - "8888:8888"
#    environment:
#      INFLUXDB_URL: http://influxdb:8086
#      KAPACITOR_URL: http://kapacitor:9092
#      REPORTING_DISABLED: "true"
#    networks:
#      - traefik_proxy
#    depends_on:
#      - influxdb
#      - kapacitor
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=chronograf"
#      - "traefik.frontend.rule=Host:chronograf.${DOMAINNAME}"
#      - "traefik.port=8888"
#      - "traefik.docker.network=traefik_proxy"
#
#  telegraf:
#    hostname: telegraf
#    container_name: telegraf
#    restart: always
#    domainname: ${DOMAINNAME}
#    image: telegraf:latest
#    volumes:
#      - ./docker/telegraf/config:/etc/telegraf
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#    networks:
#      - traefik_proxy
#  # Usage:
#  # docker-compose run influxdb-cli
#  influxdb-cli:
#    image: influxdb:latest
#    entrypoint:
#      - influx
#      - -host
#      - influxdb
#    depends_on:
#      - influxdb
#    networks:
      - traefik_proxy
#  # docker-compose run kapacitor-cli
#  kapacitor-cli:
#    image: kapacitor:latest
#    entrypoint: bash
#    environment:
#      KAPACITOR_URL: http://kapacitor:9092
#    depends_on:
#      - influxdb
#      - kapacitor
#    networks:
#      - traefik_proxy

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
